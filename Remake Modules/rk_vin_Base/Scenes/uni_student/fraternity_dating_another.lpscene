WHAT: all, -sleep, -nap
WHERE: fraternity
WHEN: 0-24
WHO: Actor = getSpecific(Fraternity); If !Actor.isDating() && !Actor.isAsexual() && !Actor.hasRelationship(Spouses, Dating)
OTHER: none

    SceneStart()
    
        Actor.dress()
        Actor.show(2)
        Actor2 = generatePersonTemporary()
        While !Actor.isInterestedIn(Actor2)
            Actor2 = generatePersonTemporary()
        Endwhile
        Actor2.makePermanent()
        Actor2:age => Random(18, 22)
        Actor2.randomizeHairs()
        Actor2.randomizeFace()
        Actor2.setDifferentMajor()
        Actor2.dress()
        Actor2.show(3)
        Jealousy = Player.getActorVar(rk_VB_Jealousy) // My general jealousy
        JealousTowardIDA = Actor.getActorVar(rk_VB_PlayerJealousTowardIDA)
        JealousTowardIDA2 = Actor2.getActorVar(rk_VB_PlayerJealousTowardIDA)
        "<Actor.Brother_or_Sister> <Actor.name> has been hanging out with this <Actor2.name> <Actor2.guy_or_girl> studying <Actor2.Major> a lot these days ... I wonder if they are together now ..."
        0:: "Good for them"
        1:: "That's a shame"
        
        If 1
            IDA = Actor.getID() // Get actor ID
            rk_VB_JealousToward.setGlobal(IDA) // I'm jealous about IDA - set actor ID
            JealousTowardIDA = rk_VB_JealousToward.getGlobal() // I'm jealous about IDA
            Actor.modifyActorVar(rk_VB_PlayerJealousTowardIDA, 1) // My jealousy toward ID stats
            "I think I might be a little jealous..."
            IDA2 = Actor2.getID() // Get Actor2 ID
            rk_VB_JealousToward.setGlobal(IDA2) // I'm jealous about IDA - set Actor2 ID
            JealousTowardIDA2 = rk_VB_JealousToward.getGlobal() // I'm jealous about IDA
            Actor2.modifyActorVar(rk_VB_PlayerJealousTowardIDA, 1) // My jealousy toward ID stats
            Player.modifyActorVar(rk_VB_Jealousy, 0.005) // My general jealousy
            mood -= 1
        EndIf
    
        addNpcRelationship(Dating, Actor, Actor2)
    SceneEnd() // Improved by Raddeck
    timeout(1000, fraternity_dating_another)